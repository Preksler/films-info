{"version":3,"file":"static/js/387.d0c0aa21.chunk.js","mappings":"uPAEaA,EAAYC,EAAAA,GAAAA,IAAH,iFAMTC,EAAcD,EAAAA,GAAAA,IAAH,kEAIXE,EAAYF,EAAAA,GAAAA,IAAH,+KASTG,EAAWH,EAAAA,GAAAA,GAAH,oKASRI,EAAgBJ,EAAAA,GAAAA,EAAH,+O,kBCY1B,EApCa,WACT,OAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE4BC,EAAAA,EAAAA,IAAWH,GAFvC,OAEcF,EAFd,OAGQC,EAASD,GAHjB,gDAKQM,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZC,KACD,CAACN,IAECF,EAIL,OACI,SAACP,EAAD,UACKO,IACG,8BACKA,EAAMS,KAAKC,KAAI,SAAAD,GAAI,OAChB,UAACd,EAAD,WACKc,EAAKE,cAAe,SAACf,EAAD,CAAWgB,IAAG,yCAAoCH,EAAKE,cAAgBE,IAAKJ,EAAKK,QAAW,SAAClB,EAAD,CAAWgB,IAAKG,EAASF,IAAKJ,EAAKK,QACpJ,SAACjB,EAAD,UAAWY,EAAKK,OACfL,EAAKO,WAAY,SAAClB,EAAD,UAAgBW,EAAKO,aAA6B,SAAClB,EAAD,6BAHtDW,EAAKQ,a","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n`;\n\nexport const CastWrapper = styled.div`\n    flex-basis: calc((100% - 32px) / 5);\n`;\n\nexport const CastImage = styled.img`\n    display: block;\n    width: 100%;\n    height: auto;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    object-fit: cover;\n`;\n\nexport const CastName = styled.h3`\n    text-align: center;\n    color: #fff;\n    background-color: rgb(255 69 0);\n    font-size: 16px;\n    padding: 8px 0;\n    margin: 0;\n`;\n\nexport const CastCharacter = styled.p`\n    text-align: center;\n    color: #fff;\n    background-color: rgb(255 69 0);\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    font-size: 16px;\n    padding: 8px 0;\n    margin: 0;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCredits } from \"../../services/moviesApi\";\nimport { Container, CastWrapper, CastImage, CastName, CastCharacter } from \"./Cast.styled\";\nimport NoPhoto from \"../../images/no-photo.jpg\";\n\nconst Cast = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        async function getMovieCast() {\n            try {\n                const movie = await getCredits(movieId);\n                setMovie(movie);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getMovieCast();\n    }, [movieId]);\n\n    if (!movie) {\n        return;\n    }\n    \n    return (\n        <Container>\n            {movie && (\n                <>\n                    {movie.cast.map(cast => (\n                        <CastWrapper key={cast.id}>\n                            {cast.profile_path ? <CastImage src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`} alt={cast.name} /> : <CastImage src={NoPhoto} alt={cast.name} />}\n                            <CastName>{cast.name}</CastName>\n                            {cast.character ? <CastCharacter>{cast.character}</CastCharacter> : <CastCharacter>No character</CastCharacter>}\n                        </CastWrapper>\n                    ))}\n                </>\n            )}\n        </Container>\n    );\n}\nexport default Cast;"],"names":["Container","styled","CastWrapper","CastImage","CastName","CastCharacter","useState","movie","setMovie","movieId","useParams","useEffect","getCredits","console","log","getMovieCast","cast","map","profile_path","src","alt","name","NoPhoto","character","id"],"sourceRoot":""}