{"version":3,"file":"static/js/206.bb0ac9b2.chunk.js","mappings":"uQAEaA,EAAUC,EAAAA,GAAAA,IAAH,6GAOPC,EAAQD,EAAAA,GAAAA,MAAH,gLASLE,EAASF,EAAAA,GAAAA,OAAH,0T,SChBNG,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACN,EAAD,YACI,SAACE,EAAD,CACIK,KAAK,OACLC,WAAS,EACTH,MAAOA,EACPC,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAEC,OAAOL,WAEvC,SAACF,EAAD,CAAQI,KAAK,SAAb,wB,SCTKI,EAAYV,EAAAA,GAAAA,IAAH,mG,kBCwFtB,EAjFe,WAAO,IAAD,EACjB,GAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwBN,EAAAA,EAAAA,UAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAazCC,GAAWC,EAAAA,EAAAA,MAAXD,OAuBR,IArBAE,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,2FACIV,GAAW,GADf,mBAG6BW,EAAAA,EAAAA,IAAWL,EAAaL,GAHrD,OAGcN,EAHd,OAKYC,EADS,IAATK,EACUN,EAAOiB,QAEP,SAACC,GAAD,wBAAoBA,IAApB,OAAmClB,EAAOiB,YAExDZ,GAAW,GATnB,gDAWQc,QAAQC,IAAR,MAXR,0DAJY,sBACPP,GADO,mCAkBZQ,KACD,CAACV,EAAaL,EAAMO,IAElBb,EAAL,CA4BA,OACI,UAACF,EAAD,YACI,iBAAMwB,SAlBO,SAAC1B,GAAM,wCAExB,2FACIS,GAAW,GADf,mBAG6BW,EAAAA,EAAAA,IAAWd,GAHxC,OAGcF,EAHd,OAIQC,EAAUD,EAAOiB,SACjBZ,GAAW,GALnB,gDAOQc,QAAQC,IAAR,MAPR,0DAFwB,sBACxBxB,EAAE2B,iBADsB,mCAYxBF,GACAX,EAAgB,CAAEc,MAAOtB,EAAaI,KAAM,KAKxC,UACI,SAACf,EAAD,CAAWC,MAAOU,EAAaT,SAvBjB,SAAC+B,GACvBrB,EAAeqB,QAwBVpB,IAAW,SAACqB,EAAA,EAAD,KACZ,SAACC,EAAA,EAAD,CAAY1B,OAAQA,IACnBA,EAAO2B,OAAS,IAAK,SAACC,EAAA,EAAD,CAAaC,WA/BvB,WAChBtB,GAAQ,SAAAD,GAAI,OAAIA,EAAO","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    position: absolute;\n    top: 8px;\n    right: 16px;\n    display: inline-flex;\n`;\n\nexport const Input = styled.input`\n    padding: 8px;\n    border-radius: 4px;\n    border-color: rgb(255 69 0);\n    border-style: solid;\n    border-width: 1px;\n    margin-right: 4px;\n`;\n\nexport const Button = styled.button`\n    padding: 8px 16px;\n    border-radius: 4px;\n    background-color: rgb(255 69 0);\n    border: none;\n    color: #fff;\n    font-size: 16px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: transform 0.1s ease-in-out;\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n","import { Wrapper, Input, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n        <Input\n            type=\"text\"\n            autoFocus\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n        />\n        <Button type=\"submit\">Search</Button>\n    </Wrapper>\n  );\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { searcMovie } from '../../services/moviesApi';\nimport { SearchBox } from '../../components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Container } from './Movies.styled';\nimport Loader from 'components/Loader/Loader';\nimport LoadMoreBtn from 'components/LoadMoreBtn/LoadMoreBtn';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const SEARCH_NAME = searchParams.get('query') ?? \"\";\n\n\n\n        //     const params = useMemo(\n        // () => Object.fromEntries([...searchParams]),\n        // [searchParams]\n        // );\n        // const { query, page } = params;\n\n\n\n\n    const { search } = useLocation();\n\n    useEffect(() => {\n        if (!search) {\n            return;\n        }\n        async function getMovies() {\n            setLoading(true);\n            try {\n                const movies = await searcMovie(SEARCH_NAME, page);\n                if (page === 1) {\n                    setMovies(movies.results);\n                } else {\n                    setMovies((prevMovies) => [...prevMovies, ...movies.results]);\n                }\n                setLoading(false);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getMovies();\n    }, [SEARCH_NAME, page, search]);\n\n    if (!movies) {\n        return;\n    }\n\n     const onLoadMore = () => {\n        setPage(page => page + 1);\n    }\n\n    const handleInputChange = (query) => {\n        setSearchQuery(query);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        async function getMovies() {\n            setLoading(true);\n            try {\n                const movies = await searcMovie(searchQuery);\n                setMovies(movies.results);\n                setLoading(false);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getMovies();\n        setSearchParams({ query: searchQuery, page: 1 });\n    }\n    \n    return (\n        <Container>\n            <form onSubmit={handleSubmit}>\n                <SearchBox value={searchQuery} onChange={handleInputChange} />\n            </form>\n            {loading && <Loader />}\n            <MoviesList movies={movies} />\n            {movies.length > 0 && <LoadMoreBtn onLoadMore={onLoadMore} />}\n        </Container>\n    );\n}\nexport default Movies;"],"names":["Wrapper","styled","Input","Button","SearchBox","value","onChange","type","autoFocus","e","target","Container","useState","movies","setMovies","searchQuery","setSearchQuery","loading","setLoading","page","setPage","useSearchParams","searchParams","setSearchParams","SEARCH_NAME","get","search","useLocation","useEffect","searcMovie","results","prevMovies","console","log","getMovies","onSubmit","preventDefault","query","Loader","MoviesList","length","LoadMoreBtn","onLoadMore"],"sourceRoot":""}