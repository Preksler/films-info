{"version":3,"file":"static/js/779.897c804d.chunk.js","mappings":"2PAEaA,EAAYC,EAAAA,GAAAA,IAAH,iFAMTC,EAAgBD,EAAAA,GAAAA,IAAH,0CAIbE,EAAiBF,EAAAA,GAAAA,IAAH,sUAYdG,EAAYH,EAAAA,GAAAA,GAAH,kNAUTI,EAASJ,EAAAA,GAAAA,IAAH,8KASNK,EAAeL,EAAAA,GAAAA,EAAH,iFAMZM,EAAYN,EAAAA,GAAAA,EAAH,gN,kBCFtB,EAzCgB,WAEZ,OAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE4BC,EAAAA,EAAAA,IAAWH,GAFvC,OAEcF,EAFd,OAGQC,EAASD,GAHjB,gDAKQM,QAAQC,IAAR,MALR,0DADY,uBAAC,WAAD,wBASZC,KACD,CAACN,IAECF,EAIL,OACI,SAACT,EAAD,UACKS,EAAMS,QAAQC,OAAS,GACxB,8BACKV,EAAMS,QAAQE,KAAI,SAAAC,GAAM,OACrB,UAACnB,EAAD,YACI,SAACE,EAAD,UAAYiB,EAAOC,UACnB,UAACnB,EAAD,YACI,SAACE,EAAD,CAAQkB,IAAKF,EAAOG,eAAeC,YAAtB,yCAAsEJ,EAAOG,eAAeC,aAAgBC,EAASC,IAAKN,EAAOC,UAC9I,SAAChB,EAAD,UAAee,EAAOO,eAJVP,EAAOQ,UAU3B,SAACtB,EAAD,gC","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n`;\n\nexport const ReviewWrapper = styled.div`\n    width: 100%;\n`;\n\nexport const ContentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-left: 1px solid rgb(255 69 0);\n    border-right: 1px solid rgb(255 69 0);\n    border-bottom: 1px solid rgb(255 69 0);\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n    padding: 8px;\n`;\n\nexport const AutorName = styled.h3`\n    color: #fff;\n    background-color: rgb(255 69 0);\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    font-size: 16px;\n    padding: 8px 8px;\n    margin: 0;\n`;\n\nexport const Avatar = styled.img`\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    margin-right: 8px;\n    object-fit: cover;\n    border: 1px solid rgb(255 69 0);\n`;\n\nexport const AutorContent = styled.p`\n    font-size: 16px;\n    padding: 8px;\n    margin: 0;\n`;\n\nexport const NoReviews = styled.p`\n    text-align: center;\n    width: 100%;\n    color: #fff;\n    background-color: rgb(255 69 0);\n    border-radius: 4px;\n    font-size: 16px;\n    padding: 12px 0;\n    margin: 0;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"../../services/moviesApi\";\nimport { Container, ReviewWrapper, ContentWrapper, AutorName, Avatar, AutorContent, NoReviews } from \"./Reviews.styled\";\nimport NoPhoto from \"../../images/no-photo.jpg\";\n\nconst Reviews = () => {\n\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        async function getMovieReviews() {\n            try {\n                const movie = await getReviews(movieId);\n                setMovie(movie);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getMovieReviews();\n    }, [movieId]);\n\n    if (!movie) {\n        return;\n    }\n\n    return (\n        <Container>\n            {movie.results.length > 0 ? (\n            <>\n                {movie.results.map(review => (\n                    <ReviewWrapper key={review.id}>\n                        <AutorName>{review.author}</AutorName>\n                        <ContentWrapper>\n                            <Avatar src={review.author_details.avatar_path ? `https://image.tmdb.org/t/p/w500${review.author_details.avatar_path}` : NoPhoto} alt={review.author} />\n                            <AutorContent>{review.content}</AutorContent>\n                        </ContentWrapper>\n                    </ReviewWrapper>\n                ))}\n            </>\n            ) : (\n                    <NoReviews>No reviews :(</NoReviews>\n            )}\n        </Container>\n    );\n}\nexport default Reviews;"],"names":["Container","styled","ReviewWrapper","ContentWrapper","AutorName","Avatar","AutorContent","NoReviews","useState","movie","setMovie","movieId","useParams","useEffect","getReviews","console","log","getMovieReviews","results","length","map","review","author","src","author_details","avatar_path","NoPhoto","alt","content","id"],"sourceRoot":""}